trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  vmHost: '20.121.66.233'             
  vmUser: 'student'                   
  jarName: 'MTCG-1.0-SNAPSHOT.jar'    
  projectPath: 'MTCG'                 

steps:
# Maven-Build
- task: Maven@3
  inputs:
    mavenPomFile: '$(projectPath)/pom.xml'      
    goals: 'clean package'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenOptions: '-Xmx3072m'
    publishJUnitResults: false
  displayName: 'Baue JAR-Datei mit Maven'


- task: DownloadSecureFile@1
  name: sshKey
  inputs:
    secureFile: 'projecthostVM_key.pem'         


- script: |
    echo "Verbindung zur VM vorbereiten"
    chmod 600 $(sshKey.secureFilePath)
    ssh -i $(sshKey.secureFilePath) -o StrictHostKeyChecking=no $(vmUser)@$(vmHost) << EOF
      sudo apt update
      sudo apt install -y openjdk-21-jre
      mkdir -p ~/deploy
      pkill -f java || true
    EOF
  displayName: 'Installiere Java & stoppe altes Programm'


- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'MyVmServiceConnection'          
    sourceFolder: '$(System.DefaultWorkingDirectory)/$(projectPath)/target'
    contents: '**/*.jar'
    targetFolder: '/home/student/deploy'          
  displayName: 'Ãœbertrage JAR auf VM'


- script: |
    echo "Starte Anwendung auf der VM"
    ssh -i $(sshKey.secureFilePath) -o StrictHostKeyChecking=no $(vmUser)@$(vmHost) << EOF
      nohup java -jar ~/deploy/$(jarName) > ~/deploy/output.log 2>&1 &
    EOF
  displayName: 'Starte MTCG-Server auf VM'
